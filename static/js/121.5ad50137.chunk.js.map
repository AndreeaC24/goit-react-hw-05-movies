{"version":3,"file":"static/js/121.5ad50137.chunk.js","mappings":"uQACA,IAAMA,EAAM,gCACNC,EAAM,mCAECC,EAAgB,WAC3B,OAAOC,MAAM,GAAD,OAAIH,EAAJ,sCAAqCC,IAAOG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACjE,EAEYC,EAAa,SAACC,GACzB,OAAOL,MAAM,GAAD,OAAIH,EAAJ,iBAAgBQ,EAAhB,oBAA8BP,IAAOG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GAC1D,EAEYG,EAAY,SAACD,GACxB,OAAOL,MAAM,GAAD,OAAIH,EAAJ,iBAAgBQ,EAAhB,4BAAsCP,IAAOG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GAClE,EAEYI,EAAc,SAACF,GAC1B,OAAOL,MAAM,GAAD,OAAIH,EAAJ,iBAAgBQ,EAAhB,4BAAsCP,IAAOG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GAClE,EAEYK,EAAc,SAACC,GAC1B,OAAOT,MAAM,GAAD,OAAIH,EAAJ,uCAAsCC,EAAtC,kBAAmDW,IAASR,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACjF,C,oECtBYO,EAAQ,WACjB,OAAO,wBAAI,wBACd,C,oICDD,EAAwB,oB,SCiExB,EA3Da,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAgCN,EAAAA,EAAAA,WAAS,GAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,YACRhB,EAAAA,EAAAA,GAAUK,GACPV,MAAK,SAAAsB,GACAA,EAAST,MAAQS,EAAST,KAAKU,OAAS,GAC1CT,EAAQQ,EAAST,MACjBO,GAAY,KAEZN,EAAQ,IACRM,GAAY,GAEf,IACAI,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZP,GAAY,EACb,IACAU,SAAQ,WACPZ,GAAa,EACd,GACJ,GAAE,CAACN,KAGF,iBAAKmB,UAAU,YAAf,UACGd,IAAa,SAACe,EAAA,EAAD,IACbb,IAAY,SAACR,EAAA,EAAD,IACZU,IAAY,wBAAI,mCAChBN,GAAQA,EAAKU,OAAS,IACrB,gBAAKM,UAAU,mCAAf,SACGhB,EAAKkB,KAAI,SAAAC,GAAK,OACb,2BACGA,EAAMC,cACL,gBACEC,IAAG,yCAAoCF,EAAMC,cAC7CE,IAAG,UAAKH,EAAMI,SAGhB,gBACEP,UAAWQ,EACXH,IAAG,4DACHC,IAAG,UAAKH,EAAMI,SAGlB,cAAGP,UAAU,oBAAb,SAAkCG,EAAMI,QACxC,eAAGP,UAAU,kBAAb,UAA+B,cAC7B,iBAAMA,UAAU,6BAAhB,SAA8CG,EAAMM,iBAf9CN,EAAM5B,GADH,QAwBxB,C","sources":["components/Request.jsx","components/common/Error.jsx","webpack://react-homework-template/./src/components/pages/Cast/Cast.module.css?f38e","components/pages/Cast/Cast.jsx"],"sourcesContent":["\nconst url = 'https://api.themoviedb.org/3/';\nconst key = '44cd7d40e9c9ffc80f6b2e51bac6d9ee'; \n\nexport const fetchTrending = () => {\n  return fetch(`${url}trending/movie/day?api_key=${key}`).then(res => res.json());\n}\n\nexport const fetchMovie = (id) => {\n  return fetch(`${url}movie/${id}?api_key=${key}`).then(res => res.json());\n} \n\nexport const fetchCast = (id) => {\n  return fetch(`${url}movie/${id}/credits?api_key=${key}`).then(res => res.json());\n}\n\nexport const fetchReview = (id) => {\n  return fetch(`${url}movie/${id}/reviews?api_key=${key}`).then(res => res.json());\n}\n\nexport const fetchSearch = (query) => {\n  return fetch(`${url}search/movie?page=1&api_key=${key}&query=${query}`).then(res => res.json())\n}\n \n","export const Error = () => {\n    return <h2>Error loading movies</h2>\n}","// extracted by mini-css-extract-plugin\nexport default {\"image\":\"Cast_image__IyPgL\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Loader } from '../../common/Loader';\nimport { Error } from '../../common/Error';\nimport { fetchCast } from '../../Request';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const [isLoading, setIsloading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n  const [notFound, setNotFound] = useState(false);\n\n  useEffect(() => {\n    fetchCast(movieId)\n      .then(response => {\n        if (response.cast && response.cast.length > 0) {\n          setCast(response.cast);\n          setNotFound(false);\n        } else {\n          setCast([]);\n          setNotFound(true);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        setHasError(true);\n      })\n      .finally(() => {\n        setIsloading(false);\n      });\n  }, [movieId]);\n\n  return (\n    <div className=\"container\">\n      {isLoading && <Loader />}\n      {hasError && <Error />}\n      {notFound && <h1>Requested movie does not exist</h1>}\n      {cast && cast.length > 0 && (\n        <div className=\"row row-cols-2 row-cols-lg-5 g-4\">\n          {cast.map(actor => (\n            <div key={actor.id}>\n              {actor.profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                  alt={`${actor.name}`}\n                />\n              ) : (\n                <img\n                  className={css.image}\n                  src={`https://www.freeiconspng.com/uploads/no-image-icon-11.PNG`}\n                  alt={`${actor.name}`}\n                />\n              )}\n              <p className=\"fw-bold fs-5 pt-2\">{actor.name}</p>\n              <p className=\"fst-italic fs-6\">Character:\n                <span className=\"fw-bold fs-6 text-info p-2\">{actor.character}</span>\n              </p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Cast;\n"],"names":["url","key","fetchTrending","fetch","then","res","json","fetchMovie","id","fetchCast","fetchReview","fetchSearch","query","Error","movieId","useParams","useState","cast","setCast","isLoading","setIsloading","hasError","setHasError","notFound","setNotFound","useEffect","response","length","catch","err","console","log","finally","className","Loader","map","actor","profile_path","src","alt","name","css","character"],"sourceRoot":""}